{
    "Description": "Bumblebee Infrastructure CloudFormation Template",
    "Parameters": {
        "EnvironmentDomain": {
            "Description": "Enter a domain for your environment",
            "Type": "String"
        },
        "FlightCustomBucket": {
            "Description": "Choose an S3 bucket (beginning with s3:// prefix) or leave blank for default",
            "Type": "String",
            "AllowedPattern": "(|^s3://[a-z0-9][-.a-z0-9][-.a-z0-9]*[a-z0-9]$)",
            "ConstraintDescription": "Bucket must begin with s3:// or be left blank"
        },
        "FlightCustomProfiles": {
            "Description": "Specify profiles separated by spaces or leave blank for default",
            "Type": "String"
        },
        "KeyPair": {
            "Description": "Choose an existing AWS key for administrator access",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "DirectoryType": {
            "Description": "Select the directory EC2 instance type to deploy",
            "Type": "String",
            "Default": "medium-r3.2xlarge",
            "AllowedValues": [
                "small-t2.large",
                "medium-r3.2xlarge",
                "large-c4.8xlarge"
            ]
        },
        "NetworkCIDR": {
            "Description": "Enter a valid CIDR that is permitted to access the cluster login node; e.g. entering 0.0.0.0/0 will allow anyone to login using the AWS key specified.",
            "Type": "String",
            "AllowedPattern": "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/[0-9]{1,2}",
            "ConstraintDescription": "Please specify a valid CIDR, e.g. 0.0.0.0/0"
        }
    },
    "Conditions": {
        "HasFlightCustomBucket": {
            "Fn::Not": [{
                "Fn::Equals": [{
                        "Ref": "FlightCustomBucket"
                    },
                    ""
                ]
            }]
        },
        "HasFlightCustomProfiles": {
            "Fn::Not": [{
                "Fn::Equals": [{
                        "Ref": "FlightCustomProfiles"
                    },
                    ""
                ]
            }]
        },
        "HasFlightCustom": {
            "Fn::Or": [{
                "Condition": "HasFlightCustomBucket"
            }, {
                "Condition": "HasFlightCustomProfiles"
            }]
        }
    },
    "Mappings": {
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "HVM64": ""
            },
            "us-west-2": {
                "HVM64": ""
            },
            "us-west-1": {
                "HVM64": ""
            },
            "eu-west-1": {
                "HVM64": "ami-e5c8bf96"
            },
            "ap-southeast-1": {
                "HVM64": ""
            },
            "ap-northeast-1": {
                "HVM64": ""
            },
            "ap-southeast-2": {
                "HVM64": ""
            },
            "sa-east-1": {
                "HVM64": ""
            },
            "cn-north-1": {
                "HVM64": "NOT_SUPPORTED"
            },
            "eu-central-1": {
                "HVM64": ""
            }
        },
        "AWSInstanceType2Arch": {
            "t2.large": {
                "Arch": "HVM64"
            },
            "m4.xlarge": {
                "Arch": "HVM64"
            },
            "m4.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.4xlarge": {
                "Arch": "HVM64"
            },
            "m4.10xlarge": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVM64"
            },
            "g2.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.large": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            }
        },
        "FlightTypeToInstanceType": {
            "compute-2C-3GB.small-c4.large": {
                "InstanceType": "c4.large"
            },
            "compute-8C-15GB.medium-c4.2xlarge": {
                "InstanceType": "c4.2xlarge"
            },
            "compute-16C-30GB.large-c4.4xlarge": {
                "InstanceType": "c4.4xlarge"
            },
            "compute-36C-60GB.dedicated-c4.8xlarge": {
                "InstanceType": "c4.8xlarge"
            },
            "balanced-4C-16GB.small-m4.xlarge": {
                "InstanceType": "m4.xlarge"
            },
            "balanced-8C-32GB.medium-m4.2xlarge": {
                "InstanceType": "m4.2xlarge"
            },
            "balanced-16C-64GB.large-m4.4xlarge": {
                "InstanceType": "m4.4xlarge"
            },
            "balanced-40C-160GB.dedicated-m4.10xlarge": {
                "InstanceType": "m4.10xlarge"
            },
            "memory-4C-30GB.small-r3.xlarge": {
                "InstanceType": "r3.xlarge"
            },
            "memory-8C-60GB.medium-r3.2xlarge": {
                "InstanceType": "r3.2xlarge"
            },
            "memory-16C-120GB.large-r3.4xlarge": {
                "InstanceType": "r3.4xlarge"
            },
            "memory-32C-240GB.dedicated-r3.8xlarge": {
                "InstanceType": "r3.8xlarge"
            },
            "gpu.medium-g2.2xlarge": {
                "InstanceType": "g2.2xlarge"
            },
            "gpu.dedicated-g2.8xlarge": {
                "InstanceType": "g2.8xlarge"
            },
            "small-t2.large": {
                "InstanceType": "t2.large"
            },
            "medium-r3.2xlarge": {
                "InstanceType": "r3.2xlarge"
            },
            "large-c4.8xlarge": {
                "InstanceType": "c4.8xlarge"
            }
        }
    },
    "Resources": {
        "EnvironmentVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Ref": "AWS::StackName"
                    }
                }],
                "CidrBlock": "10.75.0.0/16",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true"
            }
        },
        "FlightRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": "EnvironmentVPC",
            "Properties": {
                "VpcId": {
                    "Ref": "EnvironmentVPC"
                },
                "Tags": [{
                    "Key": "Application",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "APISubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "EnvironmentVPC"
                },
                "CidrBlock": "10.75.1.0/24",
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "", [{
                                    "Ref": "AWS::StackName"
                                },
                                "-api"
                            ]
                        ]
                    }
                }]
            }
        },
        "PrvSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "EnvironmentVPC"
                },
                "CidrBlock": "10.75.0.0/24",
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "", [{
                                    "Ref": "AWS::StackName"
                                },
                                "-prv"
                            ]
                        ]
                    }
                }]
            }
        },
        "FlightGW": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "EnvironmentVPC"
        },
        "FlightGWAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": "EnvironmentVPC",
            "Properties": {
                "VpcId": {
                    "Ref": "EnvironmentVPC"
                },
                "InternetGatewayId": {
                    "Ref": "FlightGW"
                }
            }
        },
        "FlightRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "FlightGWAttach",
            "Properties": {
                "RouteTableId": {
                    "Ref": "FlightRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "FlightGW"
                }
            }
        },
        "PrvSubnetToRouteTable": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": "FlightRouteTable",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrvSubnet"
                },
                "RouteTableId": {
                    "Ref": "FlightRouteTable"
                }
            }
        },
        "FlightSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Ref": "AWS::StackName"
                    }
                }],
                "GroupDescription": "Enable SSH access to the Alces Clusterware master node",
                "VpcId": {
                    "Ref": "EnvironmentVPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "-1",
                    "FromPort": "0",
                    "ToPort": "65535",
                    "CidrIp": "10.75.0.0/24"
                }, {
                    "IpProtocol": "6",
                    "FromPort": "5900",
                    "ToPort": "5920",
                    "CidrIp": {
                        "Ref": "NetworkCIDR"
                    }
                }, {
                    "IpProtocol": "6",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": {
                        "Ref": "NetworkCIDR"
                    }
                }],
                "SecurityGroupEgress": [{
                    "IpProtocol": "-1",
                    "FromPort": "0",
                    "ToPort": "65535",
                    "CidrIp": "0.0.0.0/0"
                }]
            }
        },
        "MasterIAM": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }]
                }
            }
        },
        "MasterIAMProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [{
                    "Ref": "MasterIAM"
                }]
            }
        },
        "MasterBucketPermissions": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "MasterBucketPermissions",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": [
                            "s3:ListBucket",
                            "s3:CreateBucket",
                            "s3:GetObject",
                            "s3:DeleteObject",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::alces-flight-*",
                            "arn:aws:s3:::alces-flight-*/*"
                        ]
                    }]
                },
                "Roles": [{
                    "Ref": "MasterIAM"
                }]
            }
        },
        "MasterNetInterfacePermissions": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "MasterNetInterfacePermissions",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": [
                            "ec2:AttachNetworkInterface",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DescribeSubnets"
                        ],
                        "Resource": [
                            "*"
                        ]
                    }]
                },
                "Roles": [{
                    "Ref": "MasterIAM"
                }]
            }
        },
        "Directory": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "FlightGWAttach",
            "Properties": {
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "", [{
                                    "Ref": "AWS::StackName"
                                },
                                "-directory"
                            ]
                        ]
                    }
                }],
                "IamInstanceProfile": {
                    "Ref": "MasterIAMProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": ["AWSRegionArch2AMI", {
                        "Ref": "AWS::Region"
                    }, {
                        "Fn::FindInMap": ["AWSInstanceType2Arch", {
                            "Fn::FindInMap": ["FlightTypeToInstanceType", {
                                "Ref": "DirectoryType"
                            }, "InstanceType"]
                        }, "Arch"]
                    }]
                },
                "NetworkInterfaces": [{
                    "AssociatePublicIpAddress": "True",
                    "DeviceIndex": "0",
                    "GroupSet": [{
                        "Ref": "FlightSG"
                    }],
                    "SubnetId": {
                        "Ref": "PrvSubnet"
                    },
                    "PrivateIpAddress": "10.75.0.254"
                }],
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "VolumeSize": "50"
                    }
                }, {
                    "DeviceName": "/dev/xvdb",
                    "VirtualName": "ephemeral0"
                }, {
                    "DeviceName": "/dev/xvdc",
                    "VirtualName": "ephemeral1"
                }],
                "InstanceType": {
                    "Fn::FindInMap": ["FlightTypeToInstanceType", {
                        "Ref": "DirectoryType"
                    }, "InstanceType"]
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#cloud-config\n", {
                                    "Fn::If": [
                                        "HasFlightCustom", {
                                            "Fn::Join": [
                                                " ", [
                                                    "#=FlightCustomizer", {
                                                        "Ref": "FlightCustomBucket"
                                                    }, {
                                                        "Ref": "FlightCustomProfiles"
                                                    },
                                                    "\n"
                                                ]
                                            ]
                                        },
                                        ""
                                    ]
                                },
                                "write_files:\n",
                                "- content: |\n",
                                "    instance:\n",
                                "      domain: ", {
                                    "Ref": "EnvironmentDomain"
                                }, ".alces.cluster\n",
                                "      profile: directory\n",
                                "    interfaces:\n",
                                "      eth0:\n",
                                "        name: eth0\n",
                                "        ipaddr:\n",
                                "        netmask: 255.255.255.0\n",
                                "        skip_create: true\n",
                                "        primary_interface: true\n",
                                "        subnetname:\n",
                                "        subnetid:\n",
                                "      eth1:\n",
                                "        name: eth1\n",
                                "        ipaddr: 10.75.1.254\n",
                                "        netmask: 255.255.255.0\n",
                                "        subnetname: ", {
                                    "Ref": "AWS::StackName"
                                }, "-api\n",
                                "        subnetid: ", {
                                    "Ref": "APISubnet"
                                }, "\n",
                                "  owner: root:root\n",
                                "  path: /opt/bumblebee/etc/cluster.yml\n",
                                "  permissions: '0740'\n",
                                "- content: |\n",
                                "    cluster:\n", {
                                    "Fn::Join": ["", ["      identity: '", {
                                        "Ref": "AWS::StackId"
                                    }, "'\n"]]
                                },
                                "      name: '", {
                                    "Ref": "EnvironmentDomain"
                                }, "'\n",
                                "  owner: root:root\n",
                                "  path: /opt/clusterware/etc/config.yml\n",
                                "  permissions: '0640'\n",
                                "- content: |\n",
                                "    ready\n",
                                "  owner: root:root\n",
                                "  path: /opt/clusterware/var/lib/configurator/ready\n",
                                "  permissions: '0640'\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "AccessIP": {
            "Description": "Public access IP for your Flight Compute environment. Use together with your chosen username to gain SSH access",
            "Value": {
                "Fn::GetAtt": [
                    "Directory",
                    "PublicIp"
                ]
            }
        },
        "Domain": {
            "Description": "Infrastructure domain",
            "Value": {
                "Ref": "EnvironmentDomain"
            }
        },
        "EnvironmentVPC": {
            "Description": "Environment VPC ID",
            "Value": {
                "Ref": "EnvironmentVPC"
            }
        },
        "PrivateSubnet": {
            "Description": "Private Subnet ID",
            "Value": {
                "Ref": "PrvSubnet"
            }
        },
        "APISubnet": {
            "Description": "API Subnet ID",
            "Value": {
                "Ref": "APISubnet"
            }
        }
    }
}
