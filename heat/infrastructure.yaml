heat_template_version: 2013-05-23

description: >
    Bumblebee Heat template

parameters:
  admin_key:
    type: string
    label: Cluster admin key
    description: Enter the name of an OpenStack nova keypair for administrator access
    constraints:
    - custom_constraint: nova.keypair

  cluster_type:
    type: string
    label: Bumblebee Image
    description: Choose Bumblebee image to use
    constraints:
    - custom_constraint: glance.image

  directory_flavour:
    type: string
    label: >
      Directory instance flavour
    description: Directory instance type
    constraints:
    - custom_constraint: nova.flavor

resources:
  ext_network:
    type: OS::Neutron::Net
    properties:
      name: ext

  ext_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: ext_network }
      cidr: 10.75.0.0/24
      dns_nameservers: [ "8.8.8.8", "8.8.4.4" ]
      allocation_pools:
        - start: 10.75.0.2
          end: 10.75.0.253

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: public

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: ext_subnet }

  cluster_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { get_param: 'OS::stack_name' }
      description: Enable ping/SSH
      rules:
      - protocol: icmp
      - protocol: tcp
        port_range_min: 22
        port_range_max: 22

  directory_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
            write_files:
            - path: /opt/bumblebee/etc/cluster.yml
              permissions: '0640'
              owner: root:root
              content:
                str_replace:
                  template: |
                    instance:
                      domain: bedrock.alces.cluster
                      profile: directory
                    interfaces:

                  params:
                    "%CLUSTER_NAME%": { get_param: 'OS::stack_name' }

  directory_ext_port:
    type: OS::Neutron::Port
    depends_on: ext_subnet
    properties:
      network_id: { get_resource: ext_network }
      fixed_ips:
        - subnet_id: { get_resource: ext_subnet }

  directory_access:
    type: OS::Neutron::FloatingIP
    depends_on: router
    properties:
      floating_network: public
      port_id: { get_resource: directory_ext_port }

  directory:
    type: OS::Nova::Server
    properties:
      name: directory
      image: { get_param: cluster_type }
      flavor: { get_param: directory_flavour }
      key_name: { get_param: admin_key }
      networks:
        - port: { get_resource: directory_ext_port }
      user_data_format: RAW
      user_data: { get_resource: directory_config }

outputs:
  directory_public_ip:
    description: Floating IP address of directory in public network
    value: { get_attr: [ directory_access, floating_ip_address ] }
